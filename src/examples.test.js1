// import React from "react";
// import '@testing-library/jest-dom';
// import '@testing-library/react';
// import { render, waitFor, fireEvent } from "@testing-library/react";
// import {StateMock} from '@react-mock/state';
// import HelloMessage from "./HelloMessage";
// import Button from './Button';
// import StatefulCounter from './StatefulCounter';

// //Text with prop value is rendered
// it('render personalized greeting', async () => {
//     //рендеринг новой сущности в каждом тесте, для предотвращения утечки состояния
//     const {getByText} = render(<HelloMessage name="Elon" />);

//     await waitFor(() => getByText(/hello Elon/i))
// })

// //Callback fires on button click
// it('calls onClick prop on button click', () => {
//     const onClick = jest.fn();
//     const {getByText} = render(<Button onClick={onClick} />);

//     fireEvent.click(getByText(/click me nao/i));
//     expect(onClick).toHaveBeenCalled();
// })

// //Local component state
// //компонент читает и обновляет счетчик из своего local state
// //мы тестируем, что компонент рендерит в качестве значения счетчика, затем нажимаем на кнопку
// //для увеличения, которая обновляет локальное состояние, и затем тестируем, что компонент рендерит
// //в увеличенном значении

// //подъем функции хелпера (но не значений) для переиспользования между тест кейсами
// const renderComponent = ({count}) =>
//     render(
//         <StateMock state={{count}}>
//             <StatefulCounter />
//         </StateMock>
//     );

// it('renders initial count', async () => {
//     const {getByText} = renderComponent({count: 5});

//     await waitFor(() => getByText(/clicked 5 times/i));
// })

// it('increments count', async () => {
//     const {getByText} = renderComponent({count: 5});

//     fireEvent.click(getByText('+1'));
//     await waitFor(() => getByText(/clicked 6 times/i));
// })

// it('decrements count', async () => {
//     const {getByText} = renderComponent({count: 5});

//     fireEvent.click(getByText('-1'));
//     await waitFor(() => getByText(/clicked 4 times/i));
// })
